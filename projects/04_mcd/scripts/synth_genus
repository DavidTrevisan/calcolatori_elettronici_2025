#!/usr/bin/env bash
# ==============================================================================
# Script Name:    synth_genus
# Description:    Helper script: synthesis flow with Genus
# Author:         David Trevisan
# Copyright:      (c) 2025 DT
# License:        MIT
# ==============================================================================
# Usage:          --
# Dependencies:   cadence genus synthesis
# ==============================================================================

set -euo pipefail

scriptFull=$(readlink -f "$0")
scriptPath=$(dirname "${scriptFull}")
scriptName=$(basename "${scriptFull}")
rootPath=$(realpath $(dirname "${scriptPath}"))

###########################################################
function echoUsage() {
    echo "Usage: ./${scriptName} <stdcell lib directory> "
}

LIB_DIR="/home/user/libs/nangate"
# Save '-d <path>' argument as lib directory
if [ -n "${1+x}" ] && [ "${1:-}" == "-d" ]; then
    shift
    LIB_DIR="$(realpath ${1})"
    if [[ ! -d "${LIB_DIR}" ]]; then
        echo "ERROR: ${LIB_DIR} not found!"
        echoUsage
        exit 1
    fi
    shift
fi

if [ -n "${1+x}" ] && [[ $1 =~ ^-?[0-9]+$ ]]; then
    export OPSIZE=$1 # Env var to be used in tcl
    shift
else
    export OPSIZE=32 # Env var to be used in tcl
fi
###########################################################
# Create, if not existing, target/synth directory, with subfolders
SYNTH_DIR="${rootPath}/synth"
mkdir -p "${SYNTH_DIR}/output"

pushd "${SYNTH_DIR}"
if [[ -d "${SYNTH_DIR}/libs" ]]; then
    rm -rf "${SYNTH_DIR}/libs"
fi
ln -s "${LIB_DIR%/}" "${SYNTH_DIR}/libs"

genus -batch -files "${scriptPath}/genus.tcl"

popd